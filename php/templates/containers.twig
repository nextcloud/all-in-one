{% extends "layout.twig" %}

{% block body %}
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    </head>
    <header>
        <div class="">
            <div class="logo"></div>
        </div>
        <form method="POST" action="/api/auth/logout">
            <input type="hidden" name="{{csrf.keys.name}}" value="{{csrf.name}}">
            <input type="hidden" name="{{csrf.keys.value}}" value="{{csrf.value}}">
            <input class="button" type="submit" value="Log out" />
        </form>
    </header>

    <div class="content">
        <h1>Nextcloud AIO Beta v0.7.0</h1>
        This is beta software and not production ready.<br><br>

        {% set isAnyRunning = false %}
        {% set isAnyRestarting = false %}
        {% set isWatchtowerRunning = false %}
        {% set isBackupContainerRunning = false %}
        {% set isRestoreRunning = false %}
        {% set isBackupOrRestoreRunning = false %}
        {% set isApacheStarting = false %}

        {% for container in containers %}
            {% if class(container.GetRunningState()) == 'AIO\\Container\\State\\RunningState' and container.GetIdentifier() != 'nextcloud-aio-domaincheck' and container.GetIdentifier() != 'nextcloud-aio-borgbackup' and container.GetIdentifier() != 'nextcloud-aio-watchtower' %}
                {% set isAnyRunning = true %}
            {% endif %}
            {% if class(container.GetRestartingState()) == 'AIO\\Container\\State\\RestartingState' and container.GetIdentifier() != 'nextcloud-aio-domaincheck' and container.GetIdentifier() != 'nextcloud-aio-borgbackup' and container.GetIdentifier() != 'nextcloud-aio-watchtower' %}
                {% set isAnyRestarting = true %}
            {% endif %}
            {% if container.GetIdentifier() == 'nextcloud-aio-watchtower' and class(container.GetRunningState()) == 'AIO\\Container\\State\\RunningState' %}
                {% set isWatchtowerRunning = true %}
            {% endif %}
            {% if container.GetIdentifier() == 'nextcloud-aio-apache' and class(container.GetStartingState()) == 'AIO\\Container\\State\\StartingState' %}
                {% set isApacheStarting = true %}
            {% endif %}
            {% if container.GetIdentifier() == 'nextcloud-aio-borgbackup' and class(container.GetRunningState()) == 'AIO\\Container\\State\\RunningState' %}
                {% set isBackupContainerRunning = true %}
                {% if borg_backup_mode == 'restore' %}
                    {% set isRestoreRunning = true %}
                {% endif %}
                {% if borg_backup_mode == 'backup' or borg_backup_mode == 'restore' %}
                    {% set isBackupOrRestoreRunning = true %}
                {% endif %}
            {% endif %}
        {% endfor %}

        {% if isWatchtowerRunning == true %}
            Mastercontainer update currently running. It will restart the mastercontainer soon which will make it unavailable for a moment. Please wait until that's done.<br /><br />
            <a href="" class="button reload">Reload ↻</a><br/>
        {% else %}
            {% if isBackupOrRestoreRunning == false and domain == "" %}
                {% if is_mastercontainer_update_available == true %}
                    <h2>Mastercontainer update</h2>
                    ⚠ A mastercontainer update is available. Please click on the button below to update it. Afterwards, you will be able to proceed with the setup.<br><br>
                    <form method="POST" action="/api/docker/watchtower" class="xhr">
                        <input type="hidden" name="{{csrf.keys.name}}" value="{{csrf.name}}">
                        <input type="hidden" name="{{csrf.keys.value}}" value="{{csrf.value}}">
                        <input class="button" type="submit" value="Update mastercontainer" />
                    </form>
                {% else %}
                    Please type in the domain that will be used for Nextcloud:<br><br />
                    <form method="POST" action="/api/configuration" class="xhr">
                        <input type="text" name="domain" value="{{ domain }}" placeholder="nextcloud.yourdomain.com"/>
                        <input type="hidden" name="{{csrf.keys.name}}" value="{{csrf.name}}">
                        <input type="hidden" name="{{csrf.keys.value}}" value="{{csrf.value}}">
                        <input class="button" type="submit" value="Submit" />
                    </form>
                    Make sure that this server is reachable on Port 443 and you've correctly set up the DNS config for the domain that you enter. <br><br>
                    If you have a dynamic IP-address, you can use e.g. <a href="https://ddclient.net/">DDclient</a> with a compatible domain provider for DNS updates. 
                {% endif %}
            {% endif %}

            {% if domain != "" %}

                {% if isAnyRunning == true %}
                    {% if isApacheStarting != true %}
                        Your initial Nextcloud credentials:<br><br />
                        Initial Nextcloud username: admin<br />
                        Initial Nextcloud password: {{ nextcloud_password }}<br /><br/>
                        <a href="https://{{ domain }}" class="button" target="_blank" rel="noopener">Open your Nextcloud ↗</a><br/>
                    {% else %}
                        {% if isAnyRestarting == false %}
                            Containers are currently starting.<br /><br />
                            <a href="" class="button reload">Reload ↻</a><br/><br>
                        {% else %}
                            It seems like at least one container is currently restarting which means it is not able to start correctly.<br><br>
                            To break out this endless loop, you can stop the containers below and investigate the issue by having a look at the container logs before starting them again.<br><br>
                            <form method="POST" action="/api/docker/stop" class="xhr">
                                <input type="hidden" name="{{csrf.keys.name}}" value="{{csrf.name}}">
                                <input type="hidden" name="{{csrf.keys.value}}" value="{{csrf.value}}">
                                <input class="button" type="submit" value="Stop containers" />
                            </form>
                        {% endif %}
                    {% endif %}
                {% endif %}

                {% if was_start_button_clicked == true %}
                    <h2>Containers</h2>
                    <ul>
                        {# @var containers \AIO\Container\Container[] #}
                        {% for container in containers %}
                            {% if container.GetIdentifier() != 'nextcloud-aio-borgbackup' and container.GetIdentifier() != 'nextcloud-aio-watchtower' and container.GetIdentifier() != 'nextcloud-aio-domaincheck' %}
                                <li>
                                    {% if class(container.GetStartingState()) == 'AIO\\Container\\State\\StartingState' %}
                                        <span class="status running"></span>
                                        <span>{{container.GetDisplayName()}} (<a href="/api/docker/logs?id={{ container.GetIdentifier() }}">Starting</a>)</span>
                                    {% elseif class(container.GetRunningState()) == 'AIO\\Container\\State\\RunningState' %}
                                        <span class="status success"></span>
                                        <span>{{container.GetDisplayName()}} (<a href="/api/docker/logs?id={{ container.GetIdentifier() }}">Running</a>)</span>
                                    {% else %}
                                        <span class="status error"></span>
                                        <span>{{container.GetDisplayName()}} (<a href="/api/docker/logs?id={{ container.GetIdentifier() }}">Stopped</a>)</span>
                                    {% endif %}
                                </li>
                            {% endif %}
                        {% endfor %}
                    </ul>

                    {% if has_update_available == true %}
                        {% if is_mastercontainer_update_available == false %}
                            ⚠ Container updates are available. Click on 'Stop Containers' and 'Start Containers' to update them. You should consider creating a backup first.<br><br>
                        {% endif %}
                    {% else %}
                        {% if is_mastercontainer_update_available == false %}
                            Your containers are up-to-date.<br><br>
                        {% endif %}
                    {% endif %}
                {% endif %}

                {% if isAnyRunning == true %}
                    {% if isApacheStarting != true %}
                        {% if is_mastercontainer_update_available == true %}
                            ⚠ A mastercontainer update is available. Please click on the button below to stop your containers in order to be able to update the mastercontainer.<br /><br />
                        {% endif %}
                        <form method="POST" action="/api/docker/stop" class="xhr">
                            <input type="hidden" name="{{csrf.keys.name}}" value="{{csrf.name}}">
                            <input type="hidden" name="{{csrf.keys.value}}" value="{{csrf.value}}">
                            <input class="button" type="submit" value="Stop containers" />
                        </form>
                    {% endif %}
                {% else %}
                    {% if isRestoreRunning == true %}
                        Restore currently running. Cannot start the containers until that's done.<br /><br />
                    {% elseif has_update_available == true and isBackupOrRestoreRunning == true %}
                        Restore or Backup currently running and container update available. Cannot start the containers until that's done.<br /><br />
                    {% else %}
                        {% if was_start_button_clicked == false %}
                            Clicking on the button below will download all docker containers and start them. This can take a lot of time depending on your internect connection. Since the overall size is a few GB, this will take around 5-10 min or more. So be aware and patient!<br><br>
                        {% endif %}
                        {% if is_mastercontainer_update_available == true %}
                            ⚠ Please update your mastercontainer. Afterwards, you will be able to start your containers again.<br><br>
                        {% else %}
                            {% if was_start_button_clicked == false or has_update_available == false %}
                                <form method="POST" action="/api/docker/start" class="xhr">
                                    <input type="hidden" name="{{csrf.keys.name}}" value="{{csrf.name}}">
                                    <input type="hidden" name="{{csrf.keys.value}}" value="{{csrf.value}}">
                                    <input class="button" type="submit" value="Start containers" />
                                </form>
                            {% else %}
                                <form method="POST" action="/api/docker/start" class="xhr">
                                    <input type="hidden" name="{{csrf.keys.name}}" value="{{csrf.name}}">
                                    <input type="hidden" name="{{csrf.keys.value}}" value="{{csrf.value}}">
                                    <input class="button " type="submit" value="Start and update containers" onclick="return confirm('Start and update containers? You should consider creating a backup first.')" />
                                </form>
                            {% endif %}
                        {% endif %}
                    {% endif %}
                {% endif %}

                {% if was_start_button_clicked == true %}
                    
                    {% if isBackupOrRestoreRunning == false %}
                        <h2>Mastercontainer</h2>
                        You are currently running the {{ current_channel }} channel.<br><br>

                        {% if is_mastercontainer_update_available == true %}
                            {% if isAnyRunning == false %}
                                ⚠ A mastercontainer update is available. Please click on the button below to update it.<br><br>
                                <form method="POST" action="/api/docker/watchtower" class="xhr">
                                    <input type="hidden" name="{{csrf.keys.name}}" value="{{csrf.name}}">
                                    <input type="hidden" name="{{csrf.keys.value}}" value="{{csrf.value}}">
                                    <input class="button" type="submit" value="Update mastercontainer" />
                                </form>
                            {% else %}
                                ⚠ A mastercontainer update is available. Please stop your containers in order to be able to update the mastercontainer.<br><br>
                            {% endif %}
                            {% if current_channel starts with 'latest' %}
                                You can find the changelog <a href="https://github.com/nextcloud/all-in-one/releases/latest">here</a><br><br>
                            {% elseif current_channel starts with 'beta' %}
                                You can find the changelog <a href="https://github.com/nextcloud/all-in-one/releases">here</a><br><br>
                            {% elseif current_channel starts with 'develop' %}
                                You can find all changes <a href="https://github.com/nextcloud-releases/all-in-one/commits/main">here</a><br><br>
                            {% endif %}
                        {% endif %}
                        {% if isApacheStarting == false %} 
                            You can change your AIO password below:<br><br />
                            <form method="POST" action="/api/configuration" class="xhr">
                                <input type="text" autocomplete="current-password" name="current-master-password" placeholder="your current aio password"/>
                                <input type="text" autocomplete="new-password" name="new-master-password" placeholder="your new aio password"/>
                                <input type="hidden" name="{{csrf.keys.name}}" value="{{csrf.name}}">
                                <input type="hidden" name="{{csrf.keys.value}}" value="{{csrf.value}}">
                                <input class="button" type="submit" value="Submit" />
                            </form>
                            The new password needs to be at least 24 characters long. Allowed characters are the <a href="https://en.wikipedia.org/wiki/Latin_alphabet#/media/File:Abecedarium.png">latin characters</a> 'a-z', 'A-Z', '0-9' and spaces.<br><br>
                        {% endif %}
                    {% endif %}

                    {% if isBackupOrRestoreRunning == false and borg_backup_host_location == "" and isApacheStarting != true %}
                        <h2>Backup and restore</h2>
                        Please type in the directory where backups will get created on the host system:<br><br>
                        <form method="POST" action="/api/configuration" class="xhr">
                            <input type="text" name="borg_backup_host_location" value="/mnt/backup" placeholder="/mnt/backup"/>
                            <input type="hidden" name="{{csrf.keys.name}}" value="{{csrf.name}}">
                            <input type="hidden" name="{{csrf.keys.value}}" value="{{csrf.value}}">
                            <input class="button" type="submit" value="Submit" />
                        </form>
                        The folder path that you enter must start with <b>/mnt/</b> or <b>/media/</b> or be equal to <b>/var/backups</b>. So e.g. <b>/mnt/backup</b> or <b>/var/backups</b>
                    {% endif %}

                    {% if borg_backup_host_location != "" %}
                        <h2>Backup and restore</h2>
                        {% if isBackupContainerRunning == false %}
                            {% if backup_exit_code > 0 %}
                                <span class="status error"></span> Last {{ borg_backup_mode }} failed! (<a href="/api/docker/logs?id=nextcloud-aio-borgbackup">Logs</a>)<br /><br />
                            {% elseif backup_exit_code == 0 %}
                                {% if borg_backup_mode == "backup" %}
                                    <span class="status success"></span> Last {{ borg_backup_mode }} successful on {{ last_backup_time }}! (<a href="/api/docker/logs?id=nextcloud-aio-borgbackup">Logs</a>)<br /><br />
                                {% else %}
                                    <span class="status success"></span> Last {{ borg_backup_mode }} successful! (<a href="/api/docker/logs?id=nextcloud-aio-borgbackup">Logs</a>)<br /><br />
                                {% endif %}
                            {% endif %}
                        {% endif %}

                        {% if isBackupContainerRunning == false %}
                            This is your encryption password for backups: {{ borgbackup_password }} <br /><br/>
                            Please save it at a safe place since you won't be able to restore from backup if you loose this password! <br /><br/>
                            Backed up will get all important data of your Nextcloud AIO instance like the database, your files and configuration files of the mastercontainer and else. <br /><br/>
                            The backup itself will use a tool that is called <a href="https://github.com/borgbackup/borg#what-is-borgbackup">BorgBackup<a/> which is a well-known server backup tool that efficiently backs up your files and encrypts them on the fly. <br /><br/>
                            Backups get created in the following directory on the host: {{ borg_backup_host_location }}/borg <br /><br/>
                            Be aware that this solution does not back up files and folders that are mounted into Nextcloud using the external storage app. <br /><br/>

                            {% if isApacheStarting != true %}
                                <form method="POST" action="/api/docker/backup" class="xhr">
                                    <input type="hidden" name="{{csrf.keys.name}}" value="{{csrf.name}}">
                                    <input type="hidden" name="{{csrf.keys.value}}" value="{{csrf.value}}">
                                    <input class="button" type="submit" value="Create backup" onclick="return confirm('Create backup? Are you sure that you want to create a backup? This will stop all running containers and create the backup.')" />
                                </form>

                                {% if has_backup_run_once == true %}
                                    Click on the button below to perform a backup integrity check. This is an option that verifies that your backup is intact but it should't be needed in most situtations.<br><br/>
                                    <form method="POST" action="/api/docker/backup-check" class="xhr">
                                        <input type="hidden" name="{{csrf.keys.name}}" value="{{csrf.name}}">
                                        <input type="hidden" name="{{csrf.keys.value}}" value="{{csrf.value}}">
                                        <input class="button" type="submit" value="Check backup integrity" onclick="return confirm('Check backup integrity? Are you sure that you want to check the backup? This can take a long time depending on the size of your backup.')" /><br/>
                                    </form>

                                    Choose the backup that you want to restore and click on the button below to restore the selected backup. This will overwrite all your files with the state of the backup so you should consider creating a backup first. It also makes sense to run an integrity check before restoring your files but is not mandatory since it shouldn't be needed in most situations.<br><br>
                                    <form method="POST" action="/api/docker/restore" class="xhr" id="restore_selection">
                                        <input type="hidden" name="{{csrf.keys.name}}" value="{{csrf.name}}">
                                        <input type="hidden" name="{{csrf.keys.value}}" value="{{csrf.value}}">
                                        <select id="selected_restore_time" name="selected_restore_time" form="restore_selection">
                                            {% for restore_time in backup_times %}
                                                <option value="{{ restore_time }}">{{ restore_time }}</option>
                                            {% endfor %}
                                        </select>
                                        <input class="button" type="submit" value="Restore selected backup" onclick="return confirm('Restore the selected backup? Are you sure that you want to restore the selected backup? This will stop all running containers and restore the selected backup. It is recommended to create a backup first. You might also want to check the backup integrity.')" />
                                    </form>
                                {% endif %}
                            {% endif %}

                        {% else %}
                            <span class="status running"></span> Backup container currently running. (<a href="/api/docker/logs?id=nextcloud-aio-borgbackup">Logs</a>)<br /><br />
                            <a href="" class="button reload">Reload ↻</a><br/>
                        {% endif %}
                    {% endif %}
                {% endif %}
                <h2>Optional</h2>
                In this section, you will find optional addons in the future.
                It will disable the ability to change them when any containers are running and allow to change them when they are stopped.
                Also, it will display possible sections for optional addons. (which itself will be displayed when enabled and running).
            {% endif %}
        {% endif %}

    {% if isApacheStarting == true or isBackupContainerRunning == true or isWatchtowerRunning == true %}
        <script>
            if (document.hasFocus()) {
                // hide reload button if the site reloads automatically
                var list = document.getElementsByClassName("reload button");
                for (var i = 0; i < list.length; i++) {
                    // list[i] is a node with the desired class name
                    list[i].style.display = 'none';
                }

                // set timeout for reload
                setTimeout(function(){
                window.location.reload(1);
                }, 5000);
            }
        </script>
    {% endif %}

    </div>
    <div id="overlay">
        <div class="loader"></div>
    </div>
{% endblock %}
